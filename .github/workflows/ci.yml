on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - '*'
  workflow_dispatch:

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  core-linux:
    name: Core (Linux)
    strategy:
      matrix:
        swift: [ '6.1' ]
    runs-on: ubuntu-latest
    container: swift:${{ matrix.swift }}
    steps:
      - uses: actions/checkout@v4

      - name: Install GitHub CLI
        uses: cli/cli-action@v2

      - name: Install SQLite
        run: apt update && apt -y install libsqlite3-dev

      - name: Run Core Tests
        run: |
          cd Core
          swift test --enable-test-discovery --parallel

      - name: Build CLI release binary
        run: |
          cd Core
          swift build -c release --product open-music-event

      - name: Upload CLI artifact
        uses: actions/upload-artifact@v4
        with:
          name: open-music-event-linux-${{ matrix.swift }}
          path: Core/.build/release/open-music-event

      - name: Upload file to GitHub Release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG=$(gh release view --json tagName -q .tagName)
          gh release upload $TAG Core/.build/release/open-music-event --clobber
